[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "coc-verifier-bot"
version = "1.0.0"
description = "Discord bots for Clash of Clans communities"
authors = [{name = "COC Verifier Bot"}]
license = {text = "MIT"}
requires-python = ">=3.11"
dependencies = [
    "discord.py>=2.5",
    "coc.py>=3.9",
    "boto3>=1.34",
    "spacy>=3.7",
]

[tool.setuptools]
# Treat top-level .py files as modules and only package our internal library.
py-modules = [
    "bot",
    "giveawaybot",
    "giveaway_fairness",
    "fairness_simulation",
]

[tool.setuptools.packages.find]
include = ["verifier_bot*", "tournament_bot*", "match_automation*"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "aioresponses>=0.7.4",
    "nox>=2023.4.22",
    "ruff>=0.1.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "-v"
]
markers = [
    "asyncio: marks tests as async (deselect with '-m \"not asyncio\"')",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "test_*.py",
    "*_test.py",
    "venv/*",
    ".venv/*",
    "*/site-packages/*",
    "setup.py",
    "infra/*",
    "htmlcov/*",
    ".nox/*",
    "fairness_simulation.py",
    "noxfile.py",
    # Exclude large CLI entrypoints that are exercised primarily in integration
    # environments and would otherwise skew unit-test coverage thresholds.
    "tournamentbot.py",
    "tournament_bot/*",
    "giveawaybot.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["B018"]  # Allow useless expressions in tests
